@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
	Layout = null;
}

<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>@Model.Value("title")</title>
        <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
        <!-- Font Awesome icons (free version)-->
        <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
        <!-- Google fonts-->
        <link href="https://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic" rel="stylesheet" type="text/css" />
        <link href="https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800" rel="stylesheet" type="text/css" />
        <!-- Core theme CSS (includes Bootstrap)-->
        <link href="https://cdn.jsdelivr.net/npm/prismjs/themes/prism.css" rel="stylesheet" />
        <script src="https://kit.fontawesome.com/d6247d35a0.js" crossorigin="anonymous"></script>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>LyckligKonsult — Scandinavian Premium Blog</title>
  
  <!-- Bootstrap 5 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <!-- Bootstrap Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
  <!-- Manrope font for Scandinavian feel -->
  <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@300;400;500;600;700&display=swap" rel="stylesheet">

       <link href="/css/styles.css" rel="stylesheet" />
</head>
<body>
@await Html.PartialAsync("Navigation")
 @RenderBody()


  <footer class="py-4">
    <div class="container d-flex flex-column flex-md-row align-items-center justify-content-between small text-muted-ink">
      <div class="d-flex align-items-center gap-2 mb-3 mb-md-0">
        <span class="brand-mark"></span>
        <span>© 2025 Mikael Mansour</span>
      </div>
      <div class="d-flex gap-3 fs-5">
        <a class="text-muted-ink" href="https://www.linkedin.com/in/lyckligkonsult/" target="blank" aria-label="LinkedIn"><i class="bi bi-linkedin"></i></a>
        <!--<a class="text-muted-ink" href="#" aria-label="YouTube"><i class="bi bi-youtube"></i></a>-->
        <!--<a class="text-muted-ink" href="#" aria-label="GitHub"><i class="bi bi-github"></i></a>-->
      </div>
    </div>
  </footer>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const searchInput = document.getElementById('searchInput');
    const filterButtons = document.querySelectorAll('[data-filter]');
    const cards = document.querySelectorAll('.project-card');

    function filterProjects() {
      const searchTerm = searchInput.value.toLowerCase();
      const activeFilter = document.querySelector('[data-filter].active').dataset.filter;

      cards.forEach(card => {
        const name = card.querySelector('h3').textContent.toLowerCase();
        const desc = card.querySelector('p').textContent.toLowerCase();
        const author = card.dataset.author.toLowerCase();
        const category = card.dataset.category;
        const matchesSearch = name.includes(searchTerm) || desc.includes(searchTerm) || author.includes(searchTerm);
        const matchesCategory = activeFilter === 'all' || category === activeFilter;
        card.style.display = matchesSearch && matchesCategory ? '' : 'none';
      });
    }

    filterButtons.forEach(btn => {
      btn.addEventListener('click', e => {
        filterButtons.forEach(b => b.classList.remove('active'));
        e.target.classList.add('active');
        filterProjects();
      });
    });

    searchInput.addEventListener('input', filterProjects);

    document.getElementById('projectForm').addEventListener('submit', async e => {
    e.preventDefault();

    const data = Object.fromEntries(new FormData(e.target).entries());

    const response = await fetch('/umbraco/api/opensource/submitproject', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        name: data.name,
        description: data.description,
        category: data.category,
        author: data.author,
        github: data.github
      })
    });

    const result = await response.json();

    if (result.success) {
      alert('✅ Project submitted for review!');
      e.target.reset();
      bootstrap.Modal.getInstance(document.getElementById('submitModal')).hide();
    } else {
      alert('❌ Failed to submit: ' + (result.error || 'Unknown error'));
    }
  });

  </script>

</body>
</html>